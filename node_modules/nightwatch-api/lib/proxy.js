"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getClientProxy;

function getPageProxy(getClient, subPages) {
  return new Proxy(() => getClientProxy(getClient, subPages), {
    get: (target, pageName) => getPageProxy(getClient, subPages.concat([pageName]))
  });
}

function getClientProxy(getClient, subPages = []) {
  return new Proxy({}, {
    get: (target, name) => {
      if (name !== 'page') {
        const client = getClient();

        if (!client) {
          throw new Error(`Nightwatch client is not ready.
              Looks like function "createSession" did not succeed or was not called yet.`);
        }

        if (!subPages.length) {
          return client[name];
        }

        const page = subPages.reduce((pages, pageName) => {
          if (!(pageName in pages)) {
            throw new Error(`Not existing page ${pageName}. Available pages are [${Object.keys(pages)}]`);
          }

          if (typeof pages === 'function') {
            return page;
          }

          return pages[pageName];
        }, client.page);
        return page()[name];
      }

      return getPageProxy(getClient, []);
    }
  });
}